
require 'create_table/version'
require 'create_table/parser'
require 'create_table/column_name_based_collection'

require 'create_table/column'
require 'create_table/index'
require 'create_table/unique'

# MAKE SURE YOU'RE EDITING THE .RL FILE !!!

=begin


=end

class CreateTable
  class << self
    def quote_ident(ident, options = {})
      @reserved_words ||= (IO.readlines(File.expand_path('../create_table/mysql_reserved.txt', __FILE__)) + IO.readlines(File.expand_path('../create_table/pg_reserved.txt', __FILE__))).map(&:chomp).sort.uniq
      quote_ident = options.fetch(:quote_ident, QUOTE_IDENT)
      if @reserved_words.include?(ident.upcase)
        quote_ident + ident + quote_ident
      else
        ident
      end
    end
  end

  include Parser

  QUOTE_IDENT = '"'
  BACKTICK = '`'

  attr_reader :columns
  attr_reader :indexes

  attr_accessor :table_name
  attr_accessor :temporary
  
  def initialize(sql = nil)
    @columns = ColumnNameBasedCollection.create
    @indexes = ColumnNameBasedCollection.create
    if sql
      parse sql
    end
  end

  def inspect
    %{#<CreateTable>}
  end

  def column_count
    columns.length
  end

  def primary_key=(column_name)
    if column_name.nil?
      @primary_key = nil
    else
      @primary_key = column_name.to_s
      i = Index.new self
      i.column_names = @primary_key
    end
    nil
  end

  def primary_key
    columns[@primary_key]
  end

  def parse_column(str)
    c = Column.new self
    c.parse str
    c
  end

  def add_unique(column_names)
    u = Unique.new self
    u.column_names = column_names
    u
  end

  def parse_unique(str)
    u = Unique.new self
    u.parse str
    u
  end

  def add_index(column_names, index_name = nil)
    i = Index.new self
    i.column_names = column_names
    i.name = index_name if index_name
    i
  end

  def parse_index(str)
    i = Index.new self
    i.parse str
    i
  end

  def create_table_sql(format, options)
    x = []
    x << 'CREATE'
    x << 'TEMPORARY' if temporary
    x << %{TABLE #{quoted_table_name(options)} (}
    x << columns.map { |c| c.to_sql(format, options) }.join(', ')
    x << ')'
    x.join ' '
  end

  def create_indexes_sql(format, options)
    indexes.map { |i| i.to_sql(format, options) }.compact
  end

  def to_sql(format, options)
    [create_table_sql(format, options)] + create_indexes_sql(format, options)
  end

  def to_postgresql(options = {})
    to_sql :postgresql, options
  end

  def to_mysql(options = {})
    defaults = { :quote_ident => BACKTICK }
    to_sql :mysql, defaults.merge(options)
  end

  def to_sqlite3(options = {})
    to_sql :sqlite3, options
  end

  def quoted_table_name(options)
    CreateTable.quote_ident table_name, options
  end

  def parse(str)
    data = Parser.remove_comments(str).unpack('c*')
    
class << self
	attr_accessor :_parser_actions
	private :_parser_actions, :_parser_actions=
end
self._parser_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 2, 0, 10, 2, 0, 12, 2, 
	1, 9, 2, 1, 10, 2, 1, 11, 
	2, 1, 12, 2, 1, 13, 2, 7, 
	9, 2, 7, 10, 2, 7, 11, 2, 
	7, 12, 2, 7, 13, 2, 9, 1, 
	2, 9, 11, 2, 9, 13, 2, 10, 
	0, 2, 10, 1, 2, 10, 13, 2, 
	11, 12, 2, 11, 13, 2, 12, 0, 
	2, 12, 1, 3, 1, 11, 13, 3, 
	7, 10, 1, 3, 7, 11, 13, 3, 
	7, 12, 1, 3, 10, 1, 13, 3, 
	11, 12, 1
]

class << self
	attr_accessor :_parser_cond_offsets
	private :_parser_cond_offsets, :_parser_cond_offsets=
end
self._parser_cond_offsets = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 6, 8, 10, 12, 
	14, 16, 18, 20, 20, 20, 20, 20, 
	20, 22, 24, 26, 28, 30, 32, 34, 
	36, 38, 40, 42, 44, 46, 48, 50, 
	52, 54, 56, 58, 60, 62, 64, 66, 
	68, 70, 72, 74, 76, 78, 80, 82, 
	84, 86, 86, 86, 86, 86, 86, 86, 
	86, 86, 86, 86, 86, 86, 86, 86, 
	86, 86, 88, 90, 92, 94, 96, 98, 
	100, 102, 104, 106, 108, 110, 112, 114, 
	116, 118, 120, 122, 124, 126, 128, 130, 
	132, 134, 136, 138, 140, 142, 144, 146, 
	148, 150, 152, 154, 156, 158, 160, 162, 
	164, 166, 168, 170, 172, 174, 176, 178, 
	180, 182, 184, 186, 188, 190, 192, 194, 
	196, 198, 200, 202, 204, 206, 208, 210, 
	212, 214, 216, 218, 220, 222, 224, 226, 
	228, 230, 232, 234, 236, 238, 240, 242, 
	244, 246, 248, 250, 252, 254, 256, 258, 
	260, 262, 264, 266, 268, 270, 272, 274, 
	276, 278, 280, 282, 284, 286, 288, 290, 
	292, 294, 296, 298, 300, 302, 304, 306, 
	308, 310, 312, 314, 316, 318, 320, 322, 
	324, 326, 328, 330, 332, 334, 336, 338, 
	340, 342, 344, 346, 348, 350, 352, 354, 
	356, 358, 360, 362, 364, 366, 368, 370, 
	372, 374, 376, 378, 380, 382, 384, 386, 
	388, 390, 392, 394, 396, 398, 400, 402, 
	404, 406, 408, 410, 412, 414, 416, 418, 
	420, 422, 424, 426, 428, 430, 432, 434, 
	436, 438, 440, 442, 444, 446, 448, 450, 
	452, 454, 456, 458, 460, 462, 464, 466, 
	468, 470, 472, 474, 476, 478, 480, 482, 
	484, 486, 488, 490, 492, 494, 496, 498, 
	500, 502, 504, 506, 508, 510, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 514, 516, 518, 
	518
]

class << self
	attr_accessor :_parser_cond_lengths
	private :_parser_cond_lengths, :_parser_cond_lengths=
end
self._parser_cond_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 0, 0, 0, 0, 0, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 2, 2, 2, 0, 
	0
]

class << self
	attr_accessor :_parser_cond_keys
	private :_parser_cond_keys, :_parser_cond_keys=
end
self._parser_cond_keys = [
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 0
]

class << self
	attr_accessor :_parser_cond_spaces
	private :_parser_cond_spaces, :_parser_cond_spaces=
end
self._parser_cond_spaces = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_parser_key_offsets
	private :_parser_key_offsets, :_parser_key_offsets=
end
self._parser_key_offsets = [
	0, 0, 5, 7, 9, 11, 13, 15, 
	18, 23, 27, 29, 31, 33, 36, 45, 
	50, 61, 67, 86, 101, 112, 114, 125, 
	145, 158, 161, 174, 187, 200, 213, 226, 
	239, 252, 265, 275, 282, 284, 286, 288, 
	290, 292, 294, 297, 302, 304, 306, 310, 
	319, 324, 336, 340, 345, 347, 349, 351, 
	353, 355, 360, 371, 391, 404, 417, 430, 
	443, 454, 467, 480, 493, 506, 519, 532, 
	541, 552, 582, 593, 604, 640, 660, 673, 
	686, 699, 712, 725, 738, 751, 764, 777, 
	793, 813, 826, 839, 852, 865, 878, 891, 
	907, 925, 938, 951, 967, 993, 1013, 1043, 
	1059, 1075, 1096, 1109, 1122, 1135, 1148, 1161, 
	1174, 1187, 1200, 1210, 1223, 1236, 1249, 1262, 
	1275, 1287, 1317, 1328, 1339, 1355, 1368, 1381, 
	1394, 1407, 1420, 1436, 1456, 1469, 1482, 1495, 
	1508, 1519, 1532, 1545, 1581, 1611, 1643, 1675, 
	1707, 1739, 1771, 1803, 1835, 1867, 1899, 1923, 
	1955, 1987, 2019, 2051, 2083, 2115, 2147, 2179, 
	2211, 2243, 2275, 2307, 2339, 2371, 2403, 2435, 
	2467, 2499, 2531, 2563, 2595, 2627, 2659, 2691, 
	2723, 2752, 2772, 2785, 2798, 2811, 2824, 2837, 
	2850, 2866, 2884, 2897, 2910, 2926, 2952, 2972, 
	3002, 3018, 3034, 3047, 3060, 3073, 3086, 3099, 
	3115, 3147, 3179, 3211, 3243, 3267, 3278, 3308, 
	3319, 3330, 3346, 3382, 3412, 3444, 3460, 3492, 
	3524, 3556, 3588, 3620, 3652, 3684, 3716, 3740, 
	3772, 3804, 3836, 3868, 3900, 3932, 3964, 3996, 
	4028, 4060, 4092, 4124, 4156, 4188, 4220, 4252, 
	4284, 4316, 4348, 4380, 4412, 4444, 4476, 4508, 
	4540, 4569, 4589, 4602, 4615, 4628, 4641, 4654, 
	4667, 4683, 4701, 4714, 4727, 4743, 4769, 4789, 
	4819, 4835, 4851, 4864, 4877, 4890, 4903, 4916, 
	4932, 4952, 4965, 4978, 4991, 5004, 5015, 5028, 
	5041, 5073, 5105, 5137, 5169, 5193, 5225, 5257, 
	5289, 5321, 5353, 5385, 5417, 5449, 5478, 5510, 
	5542, 5574, 5606, 5638, 5667, 5699, 5731, 5763, 
	5795, 5827, 5859, 5891, 5923, 5952, 5984, 6016, 
	6048, 6080, 6112, 6141, 6154, 6167, 6180, 6193, 
	6217, 6247, 6258, 6274, 6287, 6300, 6313, 6326, 
	6339, 6352, 6365, 6394, 6424, 6435, 6451, 6464, 
	6477, 6490, 6503, 6516, 6529, 6542, 6555, 6568, 
	6575, 6588, 6601, 6614, 6627, 6640, 6653, 6666, 
	6679, 6692, 6705, 6718, 6731, 6744, 6757, 6770, 
	6783, 6785, 6788, 6793, 6795, 6797, 6799, 6801, 
	6803, 6806, 6810, 6813, 6818, 6820, 6822, 6824, 
	6827, 6836, 6841, 6844, 6846, 6848, 6853, 6858, 
	6860, 6862, 6864, 6866, 6868, 6871, 6876, 6880, 
	6882, 6884, 6887, 6890, 6910, 6926, 6942, 6958, 
	6966
]

class << self
	attr_accessor :_parser_trans_keys
	private :_parser_trans_keys, :_parser_trans_keys=
end
self._parser_trans_keys = [
	32, 67, 99, 9, 13, 82, 114, 69, 
	101, 65, 97, 84, 116, 69, 101, 32, 
	9, 13, 32, 84, 116, 9, 13, 65, 
	69, 97, 101, 66, 98, 76, 108, 69, 
	101, 32, 9, 13, 32, 34, 96, 9, 
	13, 65, 90, 95, 122, 95, 65, 90, 
	97, 122, 32, 34, 96, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 40, 65, 
	97, 9, 13, 32, 34, 67, 73, 75, 
	80, 85, 96, 99, 105, 107, 112, 117, 
	9, 13, 65, 90, 95, 122, 67, 73, 
	75, 80, 85, 95, 99, 105, 107, 112, 
	117, 65, 90, 97, 122, 32, 34, 96, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	40, 41, 40, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 32, 34, 41, 
	67, 73, 75, 80, 85, 96, 99, 105, 
	107, 112, 117, 9, 13, 65, 90, 95, 
	122, 32, 34, 79, 96, 111, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 9, 
	13, 32, 34, 78, 96, 110, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	83, 96, 115, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 84, 96, 116, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 82, 96, 114, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 65, 
	96, 97, 9, 13, 48, 57, 66, 90, 
	95, 122, 32, 34, 73, 96, 105, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 78, 96, 110, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 84, 96, 
	116, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 95, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 80, 85, 112, 117, 
	9, 13, 82, 114, 73, 105, 77, 109, 
	65, 97, 82, 114, 89, 121, 32, 9, 
	13, 32, 75, 107, 9, 13, 69, 101, 
	89, 121, 32, 40, 9, 13, 32, 34, 
	96, 9, 13, 65, 90, 95, 122, 95, 
	65, 90, 97, 122, 32, 34, 41, 96, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 41, 9, 13, 32, 41, 44, 9, 
	13, 78, 110, 73, 105, 81, 113, 85, 
	117, 69, 101, 32, 40, 41, 9, 13, 
	40, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 73, 75, 105, 
	107, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 40, 
	78, 110, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 68, 100, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 69, 101, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 88, 
	120, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 69, 
	101, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 89, 121, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	32, 34, 78, 96, 110, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 68, 
	96, 100, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 69, 96, 101, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 88, 96, 120, 9, 13, 48, 57, 
	65, 90, 95, 122, 40, 41, 95, 48, 
	57, 65, 90, 97, 122, 40, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	32, 34, 40, 96, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 40, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 32, 34, 40, 67, 
	73, 75, 80, 85, 96, 99, 105, 107, 
	112, 117, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	40, 95, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 64, 65, 90, 91, 96, 
	97, 122, 123, 127, 40, 79, 111, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 78, 110, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 83, 
	115, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 84, 116, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 82, 114, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 65, 97, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 73, 105, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	78, 110, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 84, 116, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 40, 80, 85, 112, 117, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 40, 82, 114, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 73, 105, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	77, 109, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 65, 97, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 82, 114, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 89, 
	121, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 40, 75, 107, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 89, 121, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 32, 
	40, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 32, 
	34, 40, 96, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 40, 95, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 64, 65, 90, 91, 
	96, 97, 122, 123, 127, 32, 34, 40, 
	96, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 34, 41, 44, 67, 
	73, 75, 80, 85, 96, 99, 105, 107, 
	112, 117, 9, 13, 65, 90, 95, 122, 
	32, 34, 69, 96, 101, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 89, 
	96, 121, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 82, 96, 114, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 73, 96, 105, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 77, 96, 
	109, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 65, 96, 97, 9, 13, 
	48, 57, 66, 90, 95, 122, 32, 34, 
	82, 96, 114, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 89, 96, 121, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 95, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 34, 78, 96, 110, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 73, 96, 105, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 81, 96, 
	113, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 85, 96, 117, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	69, 96, 101, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 40, 41, 95, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	34, 40, 96, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	47, 48, 57, 58, 64, 65, 90, 91, 
	94, 95, 122, 123, 127, 40, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 40, 78, 110, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 73, 105, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 81, 113, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 85, 117, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	69, 101, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 32, 40, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 127, 32, 40, 73, 75, 
	105, 107, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	40, 78, 110, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 68, 100, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 69, 101, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	88, 120, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	69, 101, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 89, 121, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 34, 40, 67, 73, 75, 80, 
	85, 96, 99, 105, 107, 112, 117, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 64, 65, 90, 91, 
	94, 95, 122, 123, 127, 40, 67, 73, 
	75, 80, 85, 95, 99, 105, 107, 112, 
	117, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 32, 34, 40, 79, 96, 
	111, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 83, 96, 
	115, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 84, 96, 
	116, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 82, 96, 
	114, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 65, 96, 
	97, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 66, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 73, 96, 
	105, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 84, 96, 
	116, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 40, 95, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 68, 96, 
	100, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 69, 96, 
	101, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 88, 96, 
	120, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 69, 96, 
	101, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 89, 96, 
	121, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 82, 96, 
	114, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 73, 96, 
	105, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 77, 96, 
	109, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 65, 96, 
	97, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 66, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 82, 96, 
	114, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 73, 96, 
	105, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 81, 96, 
	113, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 85, 96, 
	117, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 69, 96, 
	101, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 79, 96, 
	111, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 83, 96, 
	115, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 84, 96, 
	116, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 82, 96, 
	114, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 65, 96, 
	97, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 66, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 73, 96, 
	105, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 84, 96, 
	116, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 40, 95, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 96, 97, 122, 123, 127, 
	32, 40, 80, 85, 112, 117, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 127, 40, 82, 114, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 73, 105, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 77, 
	109, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 65, 97, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 82, 114, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 89, 121, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 32, 40, 75, 107, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 127, 40, 69, 101, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 89, 121, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 32, 40, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 127, 32, 34, 
	40, 96, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	40, 95, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 64, 65, 90, 91, 96, 
	97, 122, 123, 127, 32, 34, 40, 96, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 40, 78, 110, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	73, 105, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 81, 113, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 85, 117, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 69, 
	101, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 34, 40, 78, 96, 
	110, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 68, 96, 
	100, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 69, 96, 
	101, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 88, 96, 
	120, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 40, 95, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 40, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 32, 34, 
	40, 96, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 40, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 32, 34, 40, 67, 73, 75, 
	80, 85, 96, 99, 105, 107, 112, 117, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 40, 67, 
	73, 75, 80, 85, 95, 99, 105, 107, 
	112, 117, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 64, 65, 90, 91, 96, 
	97, 122, 123, 127, 32, 34, 40, 79, 
	96, 111, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 40, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 83, 
	96, 115, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 84, 
	96, 116, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 82, 
	96, 114, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 65, 
	96, 97, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 66, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 73, 
	96, 105, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 84, 
	96, 116, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 40, 95, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 96, 
	97, 122, 123, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 68, 
	96, 100, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 69, 
	96, 101, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 88, 
	96, 120, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 69, 
	96, 101, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 89, 
	96, 121, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 82, 
	96, 114, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 73, 
	96, 105, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 77, 
	96, 109, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 65, 
	96, 97, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 66, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 82, 
	96, 114, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 73, 
	96, 105, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 81, 
	96, 113, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 85, 
	96, 117, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 69, 
	96, 101, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 79, 
	96, 111, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 83, 
	96, 115, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 84, 
	96, 116, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 82, 
	96, 114, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 65, 
	96, 97, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 66, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 73, 
	96, 105, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 84, 
	96, 116, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 40, 95, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 32, 40, 80, 85, 112, 117, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 40, 82, 114, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 73, 105, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	77, 109, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 65, 97, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 82, 114, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 89, 
	121, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 40, 75, 107, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 89, 121, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 32, 
	40, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 32, 
	34, 40, 96, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 40, 95, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 64, 65, 90, 91, 
	96, 97, 122, 123, 127, 32, 34, 40, 
	96, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 40, 78, 110, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 73, 105, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 81, 113, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 85, 117, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	69, 101, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 32, 40, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 127, 32, 40, 73, 75, 
	105, 107, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	40, 78, 110, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 68, 100, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 69, 101, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	88, 120, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	69, 101, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 89, 121, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 68, 96, 100, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 88, 96, 120, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 40, 95, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 89, 96, 121, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 73, 96, 105, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 77, 96, 109, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 65, 96, 97, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 66, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 89, 96, 121, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 40, 95, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 96, 97, 122, 123, 127, 32, 34, 
	40, 78, 96, 110, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 73, 96, 105, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 81, 96, 113, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 85, 96, 117, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 69, 96, 101, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 40, 
	95, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 32, 34, 40, 69, 96, 
	101, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 89, 96, 
	121, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 82, 96, 
	114, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 73, 96, 
	105, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 77, 96, 
	109, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 65, 96, 
	97, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 66, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 82, 96, 
	114, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 34, 40, 89, 96, 
	121, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 32, 40, 95, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 96, 97, 122, 123, 127, 
	32, 34, 40, 78, 96, 110, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	32, 34, 40, 73, 96, 105, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	32, 34, 40, 81, 96, 113, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	32, 34, 40, 85, 96, 117, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	32, 34, 40, 69, 96, 101, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	32, 40, 95, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	47, 48, 57, 58, 64, 65, 90, 91, 
	96, 97, 122, 123, 127, 40, 78, 110, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 68, 100, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	69, 101, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 88, 120, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 95, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 32, 34, 40, 96, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 40, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 40, 69, 101, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	89, 121, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 78, 110, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 73, 105, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 81, 
	113, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 85, 117, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 69, 101, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 32, 40, 95, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 96, 97, 122, 
	123, 127, 32, 34, 40, 96, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	40, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 32, 34, 79, 96, 111, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 78, 96, 110, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 83, 
	96, 115, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 84, 96, 116, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 82, 96, 114, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 65, 96, 
	97, 9, 13, 48, 57, 66, 90, 95, 
	122, 32, 34, 73, 96, 105, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	78, 96, 110, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 84, 96, 116, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	95, 48, 57, 65, 90, 97, 122, 32, 
	34, 78, 96, 110, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 68, 96, 
	100, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 69, 96, 101, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	88, 96, 120, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 69, 96, 101, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 89, 96, 121, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 82, 
	96, 114, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 73, 96, 105, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 77, 96, 109, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 65, 96, 
	97, 9, 13, 48, 57, 66, 90, 95, 
	122, 32, 34, 82, 96, 114, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	78, 96, 110, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 73, 96, 105, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 81, 96, 113, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 85, 
	96, 117, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 69, 96, 101, 9, 
	13, 48, 57, 65, 90, 95, 122, 83, 
	115, 32, 9, 13, 32, 83, 115, 9, 
	13, 69, 101, 76, 108, 69, 101, 67, 
	99, 84, 116, 32, 9, 13, 32, 42, 
	9, 13, 32, 9, 13, 32, 70, 102, 
	9, 13, 82, 114, 79, 111, 77, 109, 
	32, 9, 13, 32, 34, 96, 9, 13, 
	65, 90, 95, 122, 95, 65, 90, 97, 
	122, 32, 9, 13, 77, 109, 80, 112, 
	32, 79, 111, 9, 13, 32, 84, 116, 
	9, 13, 65, 97, 82, 114, 65, 97, 
	82, 114, 89, 121, 32, 9, 13, 32, 
	84, 116, 9, 13, 65, 69, 97, 101, 
	77, 109, 80, 112, 32, 9, 13, 32, 
	9, 13, 32, 34, 41, 67, 73, 75, 
	80, 85, 96, 99, 105, 107, 112, 117, 
	9, 13, 65, 90, 95, 122, 32, 40, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 127, 32, 40, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 127, 32, 40, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 127, 34, 96, 
	48, 57, 65, 90, 95, 122, 0
]

class << self
	attr_accessor :_parser_single_lengths
	private :_parser_single_lengths, :_parser_single_lengths=
end
self._parser_single_lengths = [
	0, 3, 2, 2, 2, 2, 2, 1, 
	3, 4, 2, 2, 2, 1, 3, 1, 
	3, 4, 13, 11, 3, 2, 5, 14, 
	5, 1, 5, 5, 5, 5, 5, 5, 
	5, 5, 2, 5, 2, 2, 2, 2, 
	2, 2, 1, 3, 2, 2, 2, 3, 
	1, 4, 2, 3, 2, 2, 2, 2, 
	2, 3, 5, 10, 7, 7, 7, 7, 
	5, 7, 7, 5, 5, 5, 5, 3, 
	5, 8, 5, 5, 18, 6, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 6, 
	10, 7, 7, 7, 7, 7, 7, 6, 
	8, 7, 7, 6, 8, 6, 8, 6, 
	6, 15, 5, 5, 5, 5, 5, 5, 
	5, 5, 2, 5, 5, 5, 5, 5, 
	4, 8, 5, 5, 6, 7, 7, 7, 
	7, 7, 6, 10, 7, 7, 7, 7, 
	5, 7, 7, 18, 16, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 6, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	7, 10, 7, 7, 7, 7, 7, 7, 
	6, 8, 7, 7, 6, 8, 6, 8, 
	6, 6, 7, 7, 7, 7, 7, 6, 
	10, 10, 10, 10, 6, 5, 8, 5, 
	5, 6, 18, 16, 10, 6, 10, 10, 
	10, 10, 10, 10, 10, 10, 6, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	7, 10, 7, 7, 7, 7, 7, 7, 
	6, 8, 7, 7, 6, 8, 6, 8, 
	6, 6, 7, 7, 7, 7, 7, 6, 
	10, 7, 7, 7, 7, 5, 7, 7, 
	10, 10, 10, 10, 6, 10, 10, 10, 
	10, 10, 10, 10, 10, 7, 10, 10, 
	10, 10, 10, 7, 10, 10, 10, 10, 
	10, 10, 10, 10, 7, 10, 10, 10, 
	10, 10, 7, 7, 7, 7, 7, 6, 
	8, 5, 6, 7, 7, 7, 7, 7, 
	7, 7, 7, 8, 5, 6, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 1, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	2, 1, 3, 2, 2, 2, 2, 2, 
	1, 2, 1, 3, 2, 2, 2, 1, 
	3, 1, 1, 2, 2, 3, 3, 2, 
	2, 2, 2, 2, 1, 3, 4, 2, 
	2, 1, 1, 14, 6, 6, 6, 2, 
	0
]

class << self
	attr_accessor :_parser_range_lengths
	private :_parser_range_lengths, :_parser_range_lengths=
end
self._parser_range_lengths = [
	0, 1, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 1, 3, 2, 
	4, 1, 3, 2, 4, 0, 3, 3, 
	4, 1, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 1, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 1, 3, 
	2, 4, 1, 1, 0, 0, 0, 0, 
	0, 1, 3, 5, 3, 3, 3, 3, 
	3, 3, 3, 4, 4, 4, 4, 3, 
	3, 11, 3, 3, 9, 7, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	5, 3, 3, 3, 3, 3, 3, 5, 
	5, 3, 3, 5, 9, 7, 11, 5, 
	5, 3, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 11, 3, 3, 5, 3, 3, 3, 
	3, 3, 5, 5, 3, 3, 3, 3, 
	3, 3, 3, 9, 7, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 9, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 5, 3, 3, 3, 3, 3, 3, 
	5, 5, 3, 3, 5, 9, 7, 11, 
	5, 5, 3, 3, 3, 3, 3, 5, 
	11, 11, 11, 11, 9, 3, 11, 3, 
	3, 5, 9, 7, 11, 5, 11, 11, 
	11, 11, 11, 11, 11, 11, 9, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 5, 3, 3, 3, 3, 3, 3, 
	5, 5, 3, 3, 5, 9, 7, 11, 
	5, 5, 3, 3, 3, 3, 3, 5, 
	5, 3, 3, 3, 3, 3, 3, 3, 
	11, 11, 11, 11, 9, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 3, 3, 3, 3, 9, 
	11, 3, 5, 3, 3, 3, 3, 3, 
	3, 3, 11, 11, 3, 5, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 3, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	1, 1, 1, 1, 0, 0, 0, 1, 
	3, 2, 1, 0, 0, 1, 1, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 1, 1, 3, 5, 5, 5, 3, 
	0
]

class << self
	attr_accessor :_parser_index_offsets
	private :_parser_index_offsets, :_parser_index_offsets=
end
self._parser_index_offsets = [
	0, 0, 5, 8, 11, 14, 17, 20, 
	23, 28, 33, 36, 39, 42, 45, 52, 
	56, 64, 70, 87, 101, 109, 112, 121, 
	139, 149, 152, 162, 172, 182, 192, 202, 
	212, 222, 232, 239, 246, 249, 252, 255, 
	258, 261, 264, 267, 272, 275, 278, 282, 
	289, 293, 302, 306, 311, 314, 317, 320, 
	323, 326, 331, 340, 356, 367, 378, 389, 
	400, 409, 420, 431, 441, 451, 461, 471, 
	478, 487, 507, 516, 525, 553, 567, 578, 
	589, 600, 611, 622, 633, 644, 655, 666, 
	678, 694, 705, 716, 727, 738, 749, 760, 
	772, 786, 797, 808, 820, 838, 852, 872, 
	884, 896, 915, 925, 935, 945, 955, 965, 
	975, 985, 995, 1002, 1012, 1022, 1032, 1042, 
	1052, 1061, 1081, 1090, 1099, 1111, 1122, 1133, 
	1144, 1155, 1166, 1178, 1194, 1205, 1216, 1227, 
	1238, 1247, 1258, 1269, 1297, 1321, 1343, 1365, 
	1387, 1409, 1431, 1453, 1475, 1497, 1519, 1535, 
	1557, 1579, 1601, 1623, 1645, 1667, 1689, 1711, 
	1733, 1755, 1777, 1799, 1821, 1843, 1865, 1887, 
	1909, 1931, 1953, 1975, 1997, 2019, 2041, 2063, 
	2085, 2104, 2120, 2131, 2142, 2153, 2164, 2175, 
	2186, 2198, 2212, 2223, 2234, 2246, 2264, 2278, 
	2298, 2310, 2322, 2333, 2344, 2355, 2366, 2377, 
	2389, 2411, 2433, 2455, 2477, 2493, 2502, 2522, 
	2531, 2540, 2552, 2580, 2604, 2626, 2638, 2660, 
	2682, 2704, 2726, 2748, 2770, 2792, 2814, 2830, 
	2852, 2874, 2896, 2918, 2940, 2962, 2984, 3006, 
	3028, 3050, 3072, 3094, 3116, 3138, 3160, 3182, 
	3204, 3226, 3248, 3270, 3292, 3314, 3336, 3358, 
	3380, 3399, 3415, 3426, 3437, 3448, 3459, 3470, 
	3481, 3493, 3507, 3518, 3529, 3541, 3559, 3573, 
	3593, 3605, 3617, 3628, 3639, 3650, 3661, 3672, 
	3684, 3700, 3711, 3722, 3733, 3744, 3753, 3764, 
	3775, 3797, 3819, 3841, 3863, 3879, 3901, 3923, 
	3945, 3967, 3989, 4011, 4033, 4055, 4074, 4096, 
	4118, 4140, 4162, 4184, 4203, 4225, 4247, 4269, 
	4291, 4313, 4335, 4357, 4379, 4398, 4420, 4442, 
	4464, 4486, 4508, 4527, 4538, 4549, 4560, 4571, 
	4587, 4607, 4616, 4628, 4639, 4650, 4661, 4672, 
	4683, 4694, 4705, 4724, 4744, 4753, 4765, 4775, 
	4785, 4795, 4805, 4815, 4825, 4835, 4845, 4855, 
	4860, 4870, 4880, 4890, 4900, 4910, 4920, 4930, 
	4940, 4950, 4960, 4970, 4980, 4990, 5000, 5010, 
	5020, 5023, 5026, 5031, 5034, 5037, 5040, 5043, 
	5046, 5049, 5053, 5056, 5061, 5064, 5067, 5070, 
	5073, 5080, 5084, 5087, 5090, 5093, 5098, 5103, 
	5106, 5109, 5112, 5115, 5118, 5121, 5126, 5131, 
	5134, 5137, 5140, 5143, 5161, 5173, 5185, 5197, 
	5203
]

class << self
	attr_accessor :_parser_indicies
	private :_parser_indicies, :_parser_indicies=
end
self._parser_indicies = [
	0, 2, 2, 0, 1, 3, 3, 1, 
	4, 4, 1, 5, 5, 1, 6, 6, 
	1, 7, 7, 1, 8, 8, 1, 8, 
	9, 9, 8, 1, 10, 11, 10, 11, 
	1, 12, 12, 1, 13, 13, 1, 14, 
	14, 1, 15, 15, 1, 15, 16, 16, 
	15, 17, 17, 1, 17, 17, 17, 1, 
	18, 19, 19, 18, 20, 20, 20, 1, 
	21, 22, 23, 23, 21, 1, 22, 24, 
	26, 27, 28, 29, 30, 24, 26, 27, 
	28, 29, 30, 22, 25, 25, 1, 31, 
	32, 33, 34, 35, 25, 31, 32, 33, 
	34, 35, 25, 25, 1, 36, 37, 37, 
	36, 38, 38, 38, 1, 40, 41, 39, 
	40, 41, 39, 42, 42, 39, 39, 39, 
	1, 43, 24, 44, 26, 27, 28, 29, 
	30, 24, 26, 27, 28, 29, 30, 43, 
	25, 25, 1, 36, 37, 45, 37, 45, 
	36, 38, 38, 38, 1, 36, 36, 1, 
	36, 37, 46, 37, 46, 36, 38, 38, 
	38, 1, 36, 37, 47, 37, 47, 36, 
	38, 38, 38, 1, 36, 37, 48, 37, 
	48, 36, 38, 38, 38, 1, 36, 37, 
	49, 37, 49, 36, 38, 38, 38, 1, 
	36, 37, 50, 37, 50, 36, 38, 38, 
	38, 1, 36, 37, 51, 37, 51, 36, 
	38, 38, 38, 1, 36, 37, 52, 37, 
	52, 36, 38, 38, 38, 1, 36, 37, 
	53, 37, 53, 36, 38, 38, 38, 1, 
	54, 38, 54, 38, 38, 38, 1, 54, 
	55, 56, 55, 56, 54, 1, 57, 57, 
	1, 58, 58, 1, 59, 59, 1, 60, 
	60, 1, 61, 61, 1, 62, 62, 1, 
	63, 63, 1, 63, 64, 64, 63, 1, 
	65, 65, 1, 66, 66, 1, 66, 67, 
	66, 1, 67, 68, 68, 67, 69, 69, 
	1, 69, 69, 69, 1, 70, 70, 71, 
	70, 70, 72, 72, 72, 1, 73, 74, 
	73, 1, 74, 43, 43, 74, 1, 75, 
	75, 1, 76, 76, 1, 77, 77, 1, 
	78, 78, 1, 79, 79, 1, 81, 82, 
	83, 81, 80, 85, 86, 84, 87, 87, 
	84, 84, 84, 1, 88, 85, 89, 90, 
	89, 90, 86, 84, 87, 87, 84, 88, 
	84, 84, 84, 1, 85, 91, 91, 86, 
	84, 87, 87, 84, 84, 84, 1, 85, 
	92, 92, 86, 84, 87, 87, 84, 84, 
	84, 1, 85, 93, 93, 86, 84, 87, 
	87, 84, 84, 84, 1, 85, 94, 94, 
	86, 84, 87, 87, 84, 84, 84, 1, 
	82, 83, 80, 87, 87, 80, 80, 80, 
	1, 85, 95, 95, 86, 84, 87, 87, 
	84, 84, 84, 1, 85, 94, 94, 86, 
	84, 87, 87, 84, 84, 84, 1, 36, 
	37, 96, 37, 96, 36, 38, 38, 38, 
	1, 36, 37, 97, 37, 97, 36, 38, 
	38, 38, 1, 36, 37, 98, 37, 98, 
	36, 38, 38, 38, 1, 36, 37, 99, 
	37, 99, 36, 38, 38, 38, 1, 101, 
	102, 103, 103, 103, 103, 100, 105, 106, 
	104, 107, 107, 104, 104, 104, 1, 108, 
	109, 105, 109, 106, 104, 107, 107, 104, 
	108, 104, 104, 104, 110, 104, 110, 104, 
	110, 104, 1, 112, 113, 111, 114, 115, 
	111, 111, 111, 1, 112, 113, 111, 116, 
	116, 111, 111, 111, 1, 117, 118, 40, 
	120, 121, 122, 123, 124, 118, 120, 121, 
	122, 123, 124, 125, 39, 126, 42, 39, 
	117, 39, 39, 39, 119, 39, 119, 39, 
	1, 40, 119, 41, 39, 42, 42, 39, 
	39, 39, 119, 39, 119, 39, 1, 40, 
	127, 127, 41, 39, 42, 42, 39, 39, 
	39, 1, 40, 128, 128, 41, 39, 42, 
	42, 39, 39, 39, 1, 40, 129, 129, 
	41, 39, 42, 42, 39, 39, 39, 1, 
	40, 130, 130, 41, 39, 42, 42, 39, 
	39, 39, 1, 40, 131, 131, 41, 39, 
	42, 42, 39, 39, 39, 1, 40, 132, 
	132, 41, 39, 42, 42, 39, 39, 39, 
	1, 40, 133, 133, 41, 39, 42, 42, 
	39, 39, 39, 1, 40, 134, 134, 41, 
	39, 42, 42, 39, 39, 39, 1, 40, 
	135, 135, 41, 39, 42, 42, 39, 39, 
	39, 1, 136, 40, 41, 39, 42, 42, 
	39, 136, 39, 39, 39, 1, 136, 40, 
	137, 138, 137, 138, 41, 39, 42, 42, 
	39, 136, 39, 39, 39, 1, 40, 139, 
	139, 41, 39, 42, 42, 39, 39, 39, 
	1, 40, 140, 140, 41, 39, 42, 42, 
	39, 39, 39, 1, 40, 141, 141, 41, 
	39, 42, 42, 39, 39, 39, 1, 40, 
	142, 142, 41, 39, 42, 42, 39, 39, 
	39, 1, 40, 143, 143, 41, 39, 42, 
	42, 39, 39, 39, 1, 40, 144, 144, 
	41, 39, 42, 42, 39, 39, 39, 1, 
	145, 40, 41, 39, 42, 42, 39, 145, 
	39, 39, 39, 1, 145, 40, 146, 146, 
	41, 39, 42, 42, 39, 145, 39, 39, 
	39, 1, 40, 147, 147, 41, 39, 42, 
	42, 39, 39, 39, 1, 40, 148, 148, 
	41, 39, 42, 42, 39, 39, 39, 1, 
	148, 149, 41, 39, 42, 42, 39, 148, 
	39, 39, 39, 1, 150, 151, 40, 151, 
	41, 39, 42, 42, 39, 150, 39, 39, 
	39, 152, 39, 152, 39, 1, 40, 152, 
	41, 39, 42, 42, 39, 39, 39, 152, 
	39, 152, 39, 1, 153, 153, 40, 153, 
	155, 39, 156, 42, 39, 153, 39, 39, 
	39, 154, 39, 154, 39, 154, 39, 1, 
	157, 40, 158, 39, 159, 42, 39, 157, 
	39, 39, 39, 1, 160, 40, 161, 117, 
	42, 42, 39, 160, 39, 39, 39, 1, 
	162, 24, 163, 43, 26, 27, 28, 29, 
	30, 24, 26, 27, 28, 29, 30, 162, 
	25, 25, 1, 36, 37, 164, 37, 164, 
	36, 38, 38, 38, 1, 36, 37, 99, 
	37, 99, 36, 38, 38, 38, 1, 36, 
	37, 165, 37, 165, 36, 38, 38, 38, 
	1, 36, 37, 166, 37, 166, 36, 38, 
	38, 38, 1, 36, 37, 167, 37, 167, 
	36, 38, 38, 38, 1, 36, 37, 168, 
	37, 168, 36, 38, 38, 38, 1, 36, 
	37, 169, 37, 169, 36, 38, 38, 38, 
	1, 36, 37, 170, 37, 170, 36, 38, 
	38, 38, 1, 63, 38, 63, 38, 38, 
	38, 1, 36, 37, 171, 37, 171, 36, 
	38, 38, 38, 1, 36, 37, 172, 37, 
	172, 36, 38, 38, 38, 1, 36, 37, 
	173, 37, 173, 36, 38, 38, 38, 1, 
	36, 37, 174, 37, 174, 36, 38, 38, 
	38, 1, 36, 37, 175, 37, 175, 36, 
	38, 38, 38, 1, 81, 82, 83, 176, 
	81, 176, 176, 176, 80, 177, 178, 85, 
	178, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 181, 182, 180, 183, 184, 180, 180, 
	180, 1, 181, 182, 180, 185, 185, 180, 
	180, 180, 1, 177, 85, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 1, 40, 
	186, 186, 41, 39, 42, 42, 39, 39, 
	39, 1, 40, 187, 187, 41, 39, 42, 
	42, 39, 39, 39, 1, 40, 188, 188, 
	41, 39, 42, 42, 39, 39, 39, 1, 
	40, 189, 189, 41, 39, 42, 42, 39, 
	39, 39, 1, 40, 190, 190, 41, 39, 
	42, 42, 39, 39, 39, 1, 192, 193, 
	194, 191, 195, 196, 191, 192, 191, 191, 
	191, 1, 197, 181, 198, 199, 198, 199, 
	182, 180, 185, 185, 180, 197, 180, 180, 
	180, 1, 181, 200, 200, 182, 180, 185, 
	185, 180, 180, 180, 1, 181, 201, 201, 
	182, 180, 185, 185, 180, 180, 180, 1, 
	181, 202, 202, 182, 180, 185, 185, 180, 
	180, 180, 1, 181, 203, 203, 182, 180, 
	185, 185, 180, 180, 180, 1, 193, 194, 
	191, 185, 185, 191, 191, 191, 1, 181, 
	204, 204, 182, 180, 185, 185, 180, 180, 
	180, 1, 181, 203, 203, 182, 180, 185, 
	185, 180, 180, 180, 1, 205, 206, 85, 
	208, 209, 210, 211, 212, 206, 208, 209, 
	210, 211, 212, 213, 84, 214, 87, 84, 
	205, 84, 84, 84, 207, 84, 207, 84, 
	1, 85, 215, 216, 217, 218, 219, 207, 
	215, 216, 217, 218, 219, 86, 84, 87, 
	87, 84, 84, 84, 207, 84, 207, 84, 
	1, 177, 178, 85, 220, 178, 220, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 221, 178, 221, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	222, 178, 222, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 223, 178, 
	223, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 224, 178, 224, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 225, 178, 225, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	226, 178, 226, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 227, 178, 
	227, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 228, 178, 228, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 85, 
	179, 86, 84, 87, 87, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 229, 178, 229, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	230, 178, 230, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 231, 178, 
	231, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 228, 178, 228, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 232, 178, 232, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	228, 178, 228, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 233, 178, 
	233, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 234, 178, 234, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 235, 178, 235, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	236, 178, 236, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 232, 178, 
	232, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 237, 178, 237, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 238, 178, 238, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	239, 178, 239, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 240, 178, 
	240, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 228, 178, 228, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 241, 178, 241, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	242, 178, 242, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 243, 178, 
	243, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 244, 178, 244, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 245, 178, 245, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	246, 178, 246, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 247, 178, 
	247, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 248, 178, 248, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 249, 178, 249, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 250, 85, 179, 
	86, 84, 87, 87, 84, 250, 84, 84, 
	84, 179, 84, 179, 84, 179, 84, 1, 
	250, 85, 251, 252, 251, 252, 86, 84, 
	87, 87, 84, 250, 84, 84, 84, 1, 
	85, 253, 253, 86, 84, 87, 87, 84, 
	84, 84, 1, 85, 254, 254, 86, 84, 
	87, 87, 84, 84, 84, 1, 85, 255, 
	255, 86, 84, 87, 87, 84, 84, 84, 
	1, 85, 256, 256, 86, 84, 87, 87, 
	84, 84, 84, 1, 85, 257, 257, 86, 
	84, 87, 87, 84, 84, 84, 1, 85, 
	258, 258, 86, 84, 87, 87, 84, 84, 
	84, 1, 259, 85, 86, 84, 87, 87, 
	84, 259, 84, 84, 84, 1, 259, 85, 
	260, 260, 86, 84, 87, 87, 84, 259, 
	84, 84, 84, 1, 85, 261, 261, 86, 
	84, 87, 87, 84, 84, 84, 1, 85, 
	262, 262, 86, 84, 87, 87, 84, 84, 
	84, 1, 262, 263, 86, 84, 87, 87, 
	84, 262, 84, 84, 84, 1, 264, 265, 
	85, 265, 86, 84, 87, 87, 84, 264, 
	84, 84, 84, 266, 84, 266, 84, 1, 
	85, 266, 86, 84, 87, 87, 84, 84, 
	84, 266, 84, 266, 84, 1, 267, 267, 
	85, 267, 269, 84, 270, 87, 84, 267, 
	84, 84, 84, 268, 84, 268, 84, 268, 
	84, 1, 271, 85, 272, 84, 273, 87, 
	84, 271, 84, 84, 84, 1, 274, 85, 
	275, 205, 87, 87, 84, 274, 84, 84, 
	84, 1, 85, 276, 276, 86, 84, 87, 
	87, 84, 84, 84, 1, 85, 277, 277, 
	86, 84, 87, 87, 84, 84, 84, 1, 
	85, 278, 278, 86, 84, 87, 87, 84, 
	84, 84, 1, 85, 279, 279, 86, 84, 
	87, 87, 84, 84, 84, 1, 85, 280, 
	280, 86, 84, 87, 87, 84, 84, 84, 
	1, 81, 82, 83, 80, 87, 87, 80, 
	81, 80, 80, 80, 1, 177, 178, 85, 
	281, 178, 281, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 282, 178, 
	282, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 283, 178, 283, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 284, 178, 284, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 286, 287, 288, 
	285, 289, 290, 285, 285, 285, 287, 285, 
	287, 285, 287, 285, 1, 292, 293, 291, 
	294, 294, 291, 291, 291, 1, 295, 296, 
	292, 296, 293, 291, 294, 294, 291, 295, 
	291, 291, 291, 297, 291, 297, 291, 297, 
	291, 1, 299, 300, 298, 301, 302, 298, 
	298, 298, 1, 299, 300, 298, 303, 303, 
	298, 298, 298, 1, 295, 292, 293, 291, 
	294, 294, 291, 295, 291, 291, 291, 1, 
	304, 305, 105, 307, 308, 309, 310, 311, 
	305, 307, 308, 309, 310, 311, 312, 104, 
	313, 107, 104, 304, 104, 104, 104, 306, 
	104, 306, 104, 1, 105, 314, 315, 316, 
	317, 318, 306, 314, 315, 316, 317, 318, 
	106, 104, 107, 107, 104, 104, 104, 306, 
	104, 306, 104, 1, 108, 109, 105, 319, 
	109, 319, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 105, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 1, 108, 109, 
	105, 320, 109, 320, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 321, 
	109, 321, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 322, 109, 322, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 323, 109, 323, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 324, 109, 324, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 325, 
	109, 325, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 326, 109, 326, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 327, 109, 327, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 105, 110, 
	106, 104, 107, 107, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 328, 109, 328, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 329, 
	109, 329, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 330, 109, 330, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 327, 109, 327, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 331, 109, 331, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 327, 
	109, 327, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 332, 109, 332, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 333, 109, 333, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 334, 109, 334, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 335, 
	109, 335, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 331, 109, 331, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 336, 109, 336, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 337, 109, 337, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 338, 
	109, 338, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 339, 109, 339, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 327, 109, 327, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 340, 109, 340, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 341, 
	109, 341, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 342, 109, 342, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 343, 109, 343, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 344, 109, 344, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 345, 
	109, 345, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 346, 109, 346, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 347, 109, 347, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 348, 109, 348, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 349, 105, 110, 106, 
	104, 107, 107, 104, 349, 104, 104, 104, 
	110, 104, 110, 104, 110, 104, 1, 349, 
	105, 350, 351, 350, 351, 106, 104, 107, 
	107, 104, 349, 104, 104, 104, 1, 105, 
	352, 352, 106, 104, 107, 107, 104, 104, 
	104, 1, 105, 353, 353, 106, 104, 107, 
	107, 104, 104, 104, 1, 105, 354, 354, 
	106, 104, 107, 107, 104, 104, 104, 1, 
	105, 355, 355, 106, 104, 107, 107, 104, 
	104, 104, 1, 105, 356, 356, 106, 104, 
	107, 107, 104, 104, 104, 1, 105, 357, 
	357, 106, 104, 107, 107, 104, 104, 104, 
	1, 358, 105, 106, 104, 107, 107, 104, 
	358, 104, 104, 104, 1, 358, 105, 359, 
	359, 106, 104, 107, 107, 104, 358, 104, 
	104, 104, 1, 105, 360, 360, 106, 104, 
	107, 107, 104, 104, 104, 1, 105, 361, 
	361, 106, 104, 107, 107, 104, 104, 104, 
	1, 361, 362, 106, 104, 107, 107, 104, 
	361, 104, 104, 104, 1, 363, 364, 105, 
	364, 106, 104, 107, 107, 104, 363, 104, 
	104, 104, 365, 104, 365, 104, 1, 105, 
	365, 106, 104, 107, 107, 104, 104, 104, 
	365, 104, 365, 104, 1, 366, 366, 105, 
	366, 368, 104, 369, 107, 104, 366, 104, 
	104, 104, 367, 104, 367, 104, 367, 104, 
	1, 370, 105, 371, 104, 372, 107, 104, 
	370, 104, 104, 104, 1, 373, 105, 374, 
	304, 107, 107, 104, 373, 104, 104, 104, 
	1, 105, 375, 375, 106, 104, 107, 107, 
	104, 104, 104, 1, 105, 376, 376, 106, 
	104, 107, 107, 104, 104, 104, 1, 105, 
	377, 377, 106, 104, 107, 107, 104, 104, 
	104, 1, 105, 378, 378, 106, 104, 107, 
	107, 104, 104, 104, 1, 105, 379, 379, 
	106, 104, 107, 107, 104, 104, 104, 1, 
	381, 382, 383, 380, 384, 385, 380, 381, 
	380, 380, 380, 1, 386, 292, 387, 388, 
	387, 388, 293, 291, 294, 294, 291, 386, 
	291, 291, 291, 1, 292, 389, 389, 293, 
	291, 294, 294, 291, 291, 291, 1, 292, 
	390, 390, 293, 291, 294, 294, 291, 291, 
	291, 1, 292, 391, 391, 293, 291, 294, 
	294, 291, 291, 291, 1, 292, 392, 392, 
	293, 291, 294, 294, 291, 291, 291, 1, 
	382, 383, 380, 294, 294, 380, 380, 380, 
	1, 292, 393, 393, 293, 291, 294, 294, 
	291, 291, 291, 1, 292, 392, 392, 293, 
	291, 294, 294, 291, 291, 291, 1, 108, 
	109, 105, 394, 109, 394, 106, 104, 107, 
	107, 104, 108, 104, 104, 104, 110, 104, 
	110, 104, 110, 104, 1, 108, 109, 105, 
	395, 109, 395, 106, 104, 107, 107, 104, 
	108, 104, 104, 104, 110, 104, 110, 104, 
	110, 104, 1, 108, 109, 105, 396, 109, 
	396, 106, 104, 107, 107, 104, 108, 104, 
	104, 104, 110, 104, 110, 104, 110, 104, 
	1, 108, 109, 105, 397, 109, 397, 106, 
	104, 107, 107, 104, 108, 104, 104, 104, 
	110, 104, 110, 104, 110, 104, 1, 101, 
	103, 102, 100, 107, 107, 100, 100, 100, 
	103, 100, 103, 100, 103, 100, 1, 108, 
	109, 105, 398, 109, 398, 106, 104, 107, 
	107, 104, 108, 104, 104, 104, 110, 104, 
	110, 104, 110, 104, 1, 108, 109, 105, 
	397, 109, 397, 106, 104, 107, 107, 104, 
	108, 104, 104, 104, 110, 104, 110, 104, 
	110, 104, 1, 108, 109, 105, 399, 109, 
	399, 106, 104, 107, 107, 104, 108, 104, 
	104, 104, 110, 104, 110, 104, 110, 104, 
	1, 108, 109, 105, 400, 109, 400, 106, 
	104, 107, 107, 104, 108, 104, 104, 104, 
	110, 104, 110, 104, 110, 104, 1, 108, 
	109, 105, 401, 109, 401, 106, 104, 107, 
	107, 104, 108, 104, 104, 104, 110, 104, 
	110, 104, 110, 104, 1, 108, 109, 105, 
	402, 109, 402, 106, 104, 107, 107, 104, 
	108, 104, 104, 104, 110, 104, 110, 104, 
	110, 104, 1, 108, 109, 105, 403, 109, 
	403, 106, 104, 107, 107, 104, 108, 104, 
	104, 104, 110, 104, 110, 104, 110, 104, 
	1, 108, 109, 105, 404, 109, 404, 106, 
	104, 107, 107, 104, 108, 104, 104, 104, 
	110, 104, 110, 104, 110, 104, 1, 358, 
	105, 110, 106, 104, 107, 107, 104, 358, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 405, 109, 405, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	108, 109, 105, 406, 109, 406, 106, 104, 
	107, 107, 104, 108, 104, 104, 104, 110, 
	104, 110, 104, 110, 104, 1, 108, 109, 
	105, 407, 109, 407, 106, 104, 107, 107, 
	104, 108, 104, 104, 104, 110, 104, 110, 
	104, 110, 104, 1, 108, 109, 105, 408, 
	109, 408, 106, 104, 107, 107, 104, 108, 
	104, 104, 104, 110, 104, 110, 104, 110, 
	104, 1, 108, 109, 105, 409, 109, 409, 
	106, 104, 107, 107, 104, 108, 104, 104, 
	104, 110, 104, 110, 104, 110, 104, 1, 
	381, 382, 410, 383, 380, 384, 385, 380, 
	381, 380, 380, 380, 410, 380, 410, 380, 
	410, 380, 1, 177, 178, 85, 411, 178, 
	411, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 284, 178, 284, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 412, 178, 412, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	413, 178, 413, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 177, 178, 85, 414, 178, 
	414, 86, 84, 87, 87, 84, 177, 84, 
	84, 84, 179, 84, 179, 84, 179, 84, 
	1, 177, 178, 85, 415, 178, 415, 86, 
	84, 87, 87, 84, 177, 84, 84, 84, 
	179, 84, 179, 84, 179, 84, 1, 177, 
	178, 85, 416, 178, 416, 86, 84, 87, 
	87, 84, 177, 84, 84, 84, 179, 84, 
	179, 84, 179, 84, 1, 177, 178, 85, 
	417, 178, 417, 86, 84, 87, 87, 84, 
	177, 84, 84, 84, 179, 84, 179, 84, 
	179, 84, 1, 259, 85, 179, 86, 84, 
	87, 87, 84, 259, 84, 84, 84, 179, 
	84, 179, 84, 179, 84, 1, 177, 178, 
	85, 418, 178, 418, 86, 84, 87, 87, 
	84, 177, 84, 84, 84, 179, 84, 179, 
	84, 179, 84, 1, 177, 178, 85, 419, 
	178, 419, 86, 84, 87, 87, 84, 177, 
	84, 84, 84, 179, 84, 179, 84, 179, 
	84, 1, 177, 178, 85, 420, 178, 420, 
	86, 84, 87, 87, 84, 177, 84, 84, 
	84, 179, 84, 179, 84, 179, 84, 1, 
	177, 178, 85, 421, 178, 421, 86, 84, 
	87, 87, 84, 177, 84, 84, 84, 179, 
	84, 179, 84, 179, 84, 1, 177, 178, 
	85, 422, 178, 422, 86, 84, 87, 87, 
	84, 177, 84, 84, 84, 179, 84, 179, 
	84, 179, 84, 1, 81, 82, 176, 83, 
	80, 87, 87, 80, 81, 80, 80, 80, 
	176, 80, 176, 80, 176, 80, 1, 40, 
	423, 423, 41, 39, 42, 42, 39, 39, 
	39, 1, 40, 424, 424, 41, 39, 42, 
	42, 39, 39, 39, 1, 40, 425, 425, 
	41, 39, 42, 42, 39, 39, 39, 1, 
	40, 426, 426, 41, 39, 42, 42, 39, 
	39, 39, 1, 428, 429, 430, 427, 431, 
	432, 427, 427, 427, 429, 427, 429, 427, 
	429, 427, 1, 433, 434, 112, 434, 113, 
	111, 116, 116, 111, 433, 111, 111, 111, 
	435, 111, 435, 111, 435, 111, 1, 112, 
	113, 111, 42, 42, 111, 111, 111, 1, 
	433, 112, 113, 111, 116, 116, 111, 433, 
	111, 111, 111, 1, 40, 436, 436, 41, 
	39, 42, 42, 39, 39, 39, 1, 40, 
	426, 426, 41, 39, 42, 42, 39, 39, 
	39, 1, 40, 437, 437, 41, 39, 42, 
	42, 39, 39, 39, 1, 40, 438, 438, 
	41, 39, 42, 42, 39, 39, 39, 1, 
	40, 439, 439, 41, 39, 42, 42, 39, 
	39, 39, 1, 40, 440, 440, 41, 39, 
	42, 42, 39, 39, 39, 1, 40, 441, 
	441, 41, 39, 42, 42, 39, 39, 39, 
	1, 192, 193, 442, 194, 191, 195, 196, 
	191, 192, 191, 191, 191, 442, 191, 442, 
	191, 442, 191, 1, 443, 444, 181, 444, 
	182, 180, 185, 185, 180, 443, 180, 180, 
	180, 445, 180, 445, 180, 445, 180, 1, 
	181, 182, 180, 42, 42, 180, 180, 180, 
	1, 443, 181, 182, 180, 185, 185, 180, 
	443, 180, 180, 180, 1, 36, 37, 446, 
	37, 446, 36, 38, 38, 38, 1, 36, 
	37, 447, 37, 447, 36, 38, 38, 38, 
	1, 36, 37, 448, 37, 448, 36, 38, 
	38, 38, 1, 36, 37, 449, 37, 449, 
	36, 38, 38, 38, 1, 36, 37, 450, 
	37, 450, 36, 38, 38, 38, 1, 36, 
	37, 451, 37, 451, 36, 38, 38, 38, 
	1, 36, 37, 452, 37, 452, 36, 38, 
	38, 38, 1, 36, 37, 453, 37, 453, 
	36, 38, 38, 38, 1, 36, 37, 454, 
	37, 454, 36, 38, 38, 38, 1, 38, 
	38, 38, 38, 1, 36, 37, 455, 37, 
	455, 36, 38, 38, 38, 1, 36, 37, 
	456, 37, 456, 36, 38, 38, 38, 1, 
	36, 37, 457, 37, 457, 36, 38, 38, 
	38, 1, 36, 37, 454, 37, 454, 36, 
	38, 38, 38, 1, 36, 37, 458, 37, 
	458, 36, 38, 38, 38, 1, 36, 37, 
	454, 37, 454, 36, 38, 38, 38, 1, 
	36, 37, 459, 37, 459, 36, 38, 38, 
	38, 1, 36, 37, 460, 37, 460, 36, 
	38, 38, 38, 1, 36, 37, 461, 37, 
	461, 36, 38, 38, 38, 1, 36, 37, 
	462, 37, 462, 36, 38, 38, 38, 1, 
	36, 37, 458, 37, 458, 36, 38, 38, 
	38, 1, 36, 37, 463, 37, 463, 36, 
	38, 38, 38, 1, 36, 37, 464, 37, 
	464, 36, 38, 38, 38, 1, 36, 37, 
	465, 37, 465, 36, 38, 38, 38, 1, 
	36, 37, 466, 37, 466, 36, 38, 38, 
	38, 1, 36, 37, 454, 37, 454, 36, 
	38, 38, 38, 1, 467, 467, 1, 468, 
	468, 1, 468, 469, 469, 468, 1, 470, 
	470, 1, 471, 471, 1, 472, 472, 1, 
	473, 473, 1, 474, 474, 1, 475, 475, 
	1, 475, 476, 475, 1, 477, 477, 1, 
	477, 478, 478, 477, 1, 479, 479, 1, 
	480, 480, 1, 481, 481, 1, 482, 482, 
	1, 482, 483, 483, 482, 484, 484, 1, 
	484, 484, 484, 1, 21, 21, 1, 485, 
	485, 1, 486, 486, 1, 487, 488, 488, 
	487, 1, 487, 489, 489, 487, 1, 10, 
	10, 1, 490, 490, 1, 491, 491, 1, 
	492, 492, 1, 493, 493, 1, 494, 494, 
	1, 494, 495, 495, 494, 1, 10, 496, 
	10, 496, 1, 497, 497, 1, 498, 498, 
	1, 487, 487, 1, 44, 44, 1, 163, 
	24, 44, 26, 27, 28, 29, 30, 24, 
	26, 27, 28, 29, 30, 163, 25, 25, 
	1, 499, 105, 106, 104, 107, 107, 104, 
	499, 104, 104, 104, 1, 500, 85, 86, 
	84, 87, 87, 84, 500, 84, 84, 84, 
	1, 501, 40, 41, 39, 42, 42, 39, 
	501, 39, 39, 39, 1, 502, 502, 503, 
	503, 503, 1, 1, 0
]

class << self
	attr_accessor :_parser_trans_targs
	private :_parser_trans_targs, :_parser_trans_targs=
end
self._parser_trans_targs = [
	1, 0, 2, 3, 4, 5, 6, 7, 
	8, 9, 10, 379, 11, 12, 13, 14, 
	15, 16, 17, 378, 16, 17, 18, 360, 
	19, 20, 24, 67, 106, 108, 115, 334, 
	344, 348, 350, 355, 21, 25, 20, 22, 
	22, 22, 23, 23, 394, 26, 27, 28, 
	29, 30, 31, 32, 33, 34, 35, 36, 
	52, 37, 38, 39, 40, 41, 42, 43, 
	44, 45, 46, 47, 48, 49, 50, 51, 
	49, 50, 51, 53, 54, 55, 56, 57, 
	58, 59, 58, 58, 58, 58, 58, 23, 
	59, 60, 65, 61, 62, 63, 64, 66, 
	68, 69, 70, 71, 72, 72, 72, 73, 
	72, 72, 72, 23, 74, 213, 73, 75, 
	75, 75, 76, 76, 23, 76, 77, 22, 
	78, 315, 323, 89, 325, 398, 395, 79, 
	80, 81, 82, 83, 84, 85, 86, 87, 
	88, 89, 125, 90, 91, 92, 93, 94, 
	95, 96, 97, 98, 99, 100, 100, 101, 
	102, 103, 102, 104, 105, 103, 104, 105, 
	104, 76, 105, 395, 107, 109, 110, 111, 
	112, 113, 114, 116, 117, 118, 119, 120, 
	121, 122, 124, 121, 123, 123, 123, 76, 
	76, 23, 126, 127, 128, 129, 130, 123, 
	131, 123, 123, 139, 139, 131, 132, 137, 
	133, 134, 135, 136, 138, 139, 140, 121, 
	167, 200, 300, 302, 309, 397, 395, 141, 
	151, 155, 157, 162, 142, 143, 144, 145, 
	146, 147, 148, 149, 150, 152, 153, 154, 
	156, 158, 159, 160, 161, 163, 164, 165, 
	166, 168, 169, 170, 171, 172, 173, 174, 
	175, 176, 177, 178, 194, 179, 180, 181, 
	182, 183, 184, 185, 186, 187, 188, 189, 
	189, 190, 191, 192, 191, 193, 105, 192, 
	193, 105, 193, 139, 195, 196, 197, 198, 
	199, 201, 202, 203, 204, 205, 205, 206, 
	205, 210, 210, 205, 205, 205, 23, 207, 
	209, 206, 208, 208, 208, 76, 76, 23, 
	210, 211, 73, 239, 280, 285, 287, 294, 
	396, 395, 212, 223, 227, 229, 234, 214, 
	215, 216, 217, 218, 219, 220, 221, 222, 
	224, 225, 226, 228, 230, 231, 232, 233, 
	235, 236, 237, 238, 240, 241, 242, 243, 
	244, 245, 246, 247, 248, 249, 250, 266, 
	251, 252, 253, 254, 255, 256, 257, 258, 
	259, 260, 261, 261, 262, 263, 264, 263, 
	265, 105, 264, 265, 105, 265, 210, 267, 
	268, 269, 270, 271, 205, 272, 205, 205, 
	139, 139, 272, 273, 278, 274, 275, 276, 
	277, 279, 281, 282, 283, 284, 286, 288, 
	289, 290, 291, 292, 293, 295, 296, 297, 
	298, 299, 206, 301, 303, 304, 305, 306, 
	307, 308, 310, 311, 312, 313, 314, 316, 
	317, 318, 319, 75, 75, 320, 75, 210, 
	210, 321, 322, 320, 324, 326, 327, 328, 
	329, 330, 331, 332, 333, 331, 335, 336, 
	337, 338, 339, 340, 341, 342, 343, 345, 
	346, 347, 349, 351, 352, 353, 354, 356, 
	357, 358, 359, 361, 362, 363, 364, 365, 
	366, 367, 368, 369, 370, 371, 372, 373, 
	374, 375, 376, 377, 399, 380, 381, 382, 
	384, 383, 385, 386, 387, 388, 389, 390, 
	391, 392, 393, 396, 397, 398, 400, 399
]

class << self
	attr_accessor :_parser_trans_actions
	private :_parser_trans_actions, :_parser_trans_actions=
end
self._parser_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 7, 7, 0, 0, 0, 0, 
	0, 13, 13, 13, 13, 13, 13, 13, 
	13, 13, 13, 13, 0, 0, 0, 0, 
	1, 3, 15, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 17, 19, 19, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	21, 21, 78, 81, 0, 1, 3, 23, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 25, 93, 96, 25, 
	0, 1, 3, 27, 0, 0, 0, 0, 
	1, 3, 51, 27, 66, 0, 0, 13, 
	13, 13, 13, 13, 13, 3, 15, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	17, 19, 0, 39, 54, 0, 3, 15, 
	0, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	21, 0, 0, 0, 0, 1, 3, 45, 
	23, 60, 0, 0, 0, 0, 0, 21, 
	21, 33, 42, 103, 57, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 13, 
	13, 13, 13, 13, 13, 3, 23, 13, 
	13, 13, 13, 13, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 17, 19, 0, 69, 72, 0, 
	3, 23, 0, 3, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 25, 36, 25, 
	48, 119, 87, 0, 1, 3, 90, 0, 
	0, 0, 0, 1, 3, 99, 90, 107, 
	0, 0, 13, 13, 13, 13, 13, 13, 
	3, 27, 13, 13, 13, 13, 13, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 17, 19, 0, 
	69, 75, 0, 3, 27, 0, 3, 0, 
	0, 0, 0, 0, 21, 21, 78, 81, 
	115, 84, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 21, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 25, 36, 25, 48, 111, 
	63, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 21, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 9, 0, 0, 31, 
	0, 0, 0, 0, 0, 0, 29, 0, 
	0, 0, 0, 0, 0, 0, 11, 0
]

class << self
	attr_accessor :_parser_eof_actions
	private :_parser_eof_actions, :_parser_eof_actions=
end
self._parser_eof_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 11, 
	0
]

class << self
	attr_accessor :parser_start
end
self.parser_start = 1;
class << self
	attr_accessor :parser_first_final
end
self.parser_first_final = 394;
class << self
	attr_accessor :parser_error
end
self.parser_error = 0;

class << self
	attr_accessor :parser_en_main
end
self.parser_en_main = 1;


    # % (this fixes syntax highlighting)
    parens = 0
    p = item = 0
    pe = eof = data.length
    
begin
	p ||= 0
	pe ||= data.length
	cs = parser_start
end

    # % (this fixes syntax highlighting)
    
begin
	_klen, _trans, _keys, _widec, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_widec = data[p].ord
	_keys = _parser_cond_offsets[cs]*2
	_klen = _parser_cond_lengths[cs]
	if _klen > 0
		_lower = _keys
		_upper = _keys + (_klen<<1) - 2
		loop do
			break if _upper < _lower
			_mid = _lower + (((_upper-_lower) >> 1) & ~1)
			if _widec < _parser_cond_keys[_mid]
				_upper = _mid - 2
			elsif _widec > _parser_cond_keys[_mid+1]
				_lower = _mid + 2
			else
				case _parser_cond_spaces[_parser_cond_offsets[cs] + ((_mid - _keys)>>1)]
	when 0 then	_widec = 128+ (data[p].ord - -128)
	_widec += 256 if ( 
 parens == 0  )
				end # case
			end
		end # loop
	end
	_keys = _parser_key_offsets[cs]
	_trans = _parser_index_offsets[cs]
	_klen = _parser_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if _widec < _parser_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif _widec > _parser_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _parser_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if _widec < _parser_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif _widec > _parser_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _parser_indicies[_trans]
	cs = _parser_trans_targs[_trans]
	if _parser_trans_actions[_trans] != 0
		_acts = _parser_trans_actions[_trans]
		_nacts = _parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _parser_actions[_acts - 1]
when 0 then
		begin
parens+=1		end
when 1 then
		begin
parens-=1		end
when 2 then
		begin
 start_table_name = p                                    		end
when 3 then
		begin
 self.table_name = read(data, start_table_name, p)       		end
when 4 then
		begin
 start_from_table_name = p                               		end
when 5 then
		begin
 self.table_name = read(data, start_from_table_name, p)  		end
when 6 then
		begin
 start_column = p                                        		end
when 7 then
		begin
 parse_column read(data, start_column, p)                		end
when 8 then
		begin
 start_primary_key = p                                   		end
when 9 then
		begin
 self.primary_key = read(data, start_primary_key, p)     		end
when 10 then
		begin
 start_unique = p                                        		end
when 11 then
		begin
 parse_unique read(data, start_unique, p)                		end
when 12 then
		begin
 start_index = p                                         		end
when 13 then
		begin
 parse_index read(data, start_index, p)                  		end
when 14 then
		begin
@temporary=true		end
when 15 then
		begin
@temporary=true		end
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _parser_eof_actions[cs]
	__nacts =  _parser_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _parser_actions[__acts - 1]
when 5 then
		begin
 self.table_name = read(data, start_from_table_name, p)  		end
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

    # % (this fixes syntax highlighting)
    self
  end
end
